// shigapass.nf
nextflow.enable.dsl = 2
 
process SHIGAPASS {
    // Container image for SHIGAPASS
    container 'quay.io/biocontainers/shigapass:1.5.0--hdfd78af_0'

    // Resource allowance
    cpus 1
    memory '8 GB'
    
    // Kubernetes pod annotations (if applicable)
    //pod annotation: 'scheduler.illumina.com/presetSize', value: 'fpga-medium'
    //pod annotation: 'volumes.illumina.com/scratchSize', value: '1TiB'
    
    // Publish outputs to the 'out' directory using symlinks
    publishDir 'out/SHIGAPASS', mode: 'symlink'
    
    input:
        tuple val(sample_id), path("${sample_id}.fasta")

    output:
        path("${sample_id}_ShigaPass_summary.csv"), emit: report
        path("versions.yml"), emit: versions
        
    when:
    task.ext.when == null || task.ext.when

    script:
    def args = task.ext.args ?: ''
    """
    # Convert our genome path to a file with a path in it
    ls ${sample_id}.fasta > ${sample_id}_tmp.txt

    # Run ShigaPass
    ShigaPass.sh \\
        -l ${sample_id}_tmp.txt \\
        $args \\
        -p /usr/local/share/shigapass-1.5.0/db \\
        -t $task.cpus \\
        -o ${sample_id} \\


    # Remove the temporary file from above
    rm ${sample_id}_tmp.txt

    # Delete the directory generated by ShigaPass
    mv ${sample_id}/ShigaPass_summary.csv ${sample_id}_ShigaPass_summary.csv

    cat <<-END_VERSIONS > versions.yml
    "${task.process}":
        shigapass: \$(echo \$(ShigaPass.sh --version 2>&1) | sed 's/^.*ShigaPass version //' )
    END_VERSIONS
    """
}

process SHIGAPASS_aggregate {
    // Container image
    container 'quay.io/biocontainers/shigapass:1.5.0--hdfd78af_0'

    // Resource allowance
    cpus 1
    
    // Publish outputs to the 'out' directory using symlinks
    publishDir 'Results/summaries', mode: 'symlink'
    
    input:
        path reports

    output:
        path("shigapass_report.tsv"), emit: aggregated_report

    when:
        task.ext.when == null || task.ext.when

    script:
        def args = task.ext.args ?: ''
        """
        # Combine reports
        cat ${reports} > tmp_file
        # Rename name column
        sed -i 's/^Name/name/g' tmp_file
        # Replace semi-colons with tabs
        perl -pi -e 's/;/\t/g' tmp_file
        # Remove duplicate headers
        awk 'NR==1 || \$0 != header { if(NR==1){header=\$0}; print }' tmp_file > shigapass_report.tsv
        """
}
